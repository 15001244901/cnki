;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-book-copy" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M574.428766 914.110063c-4.248971 0-7.370205-0.633457-9.648194-1.09499-0.752166-0.151457-1.40302-0.281423-1.919815-0.354081-4.682874-0.679508-124.77464-35.473588-202.168954-58.193098-198.861469-58.379349-205.060956-62.318244-207.709399-64.001663-0.504514-0.321334-1.161508-0.711232-1.940282-1.176859-8.568554-5.124963-31.331045-18.740705-50.189437-49.316515-23.126806-37.500854-32.675734-87.209314-28.379689-147.748966 4.257158-59.950199 44.454554-105.563191 73.805407-138.868289 6.943466-7.880859 12.941351-14.687195 17.653902-20.768996 20.394447-26.303301 168.683745-176.536974 248.350931-257.247982 22.043073-22.331659 39.542448-40.059243 41.771316-42.471291 0.100289-0.127919 0.206718-0.266072 0.321334-0.413436 11.606896-14.970664 27.307212-22.561914 46.666024-22.561914 4.334933 0 8.888864 0.393992 13.530804 1.169695 34.005073 5.708276 171.019042 36.716964 176.83477 38.031976 21.333888 4.8374 208.727638 47.342462 219.606928 50.674507 7.103109 2.184864 24.459215 9.14675 32.456736 26.638961 6.062357 13.255521 5.180224 28.968118-2.62286 46.698772-4.487413 10.197735-24.326179 36.281015-59.254318 77.934645 2.614673-1.171742 5.41969-1.902417 8.413004-2.198167 8.804949-0.871899 15.317582-1.275101 20.488596-1.275101 16.29898 0 22.106521 4.099561 30.968778 11.346963 0.844268 0.691788 1.738681 1.42144 2.706775 2.195097 13.925819 11.143316 7.309827 31.900031 2.47959 47.053876-1.063266 3.334092-2.49187 7.819458-2.751802 9.652287 1.809292 9.851841 7.691538 61.241674 4.930526 78.700115-0.592523 3.757761-1.332409 8.436541-53.192984 73.417555-29.8349 37.384192-70.532716 86.993386-111.658295 136.10216-43.592888 52.055013-84.588501 99.903013-115.437546 134.72677-56.10443 63.338529-62.598643 65.74239-66.480229 67.178158C590.699092 912.147267 581.91768 914.110063 574.428766 914.110063zM566.193826 891.856179c0.970141 0.14941 1.883997 0.333614 2.767153 0.513724 1.786778 0.362268 3.331021 0.673368 5.467787 0.673368 4.691061 0 11.363337-1.574944 19.839789-4.682874 9.801697-6.213813 67.680625-69.458193 172.590916-194.699483 92.381352-110.279836 154.819328-189.404643 161.306377-201.488422 1.773475-15.140541-3.485548-63.811319-5.010347-70.687243-1.175835-5.284607 0.653924-11.026653 3.423123-19.720056 1.700816-5.332704 3.625748-11.376641 4.457736-16.593706 0.950697-5.978442-0.067541-7.654698-0.078798-7.669025-0.971164-0.76547-1.926978-1.547313-2.828554-2.282082-6.67023-5.45653-8.058923-6.588361-17.632412-6.588361-4.460806 0-10.315421 0.369431-18.420395 1.172765-5.081982 0.499397-9.667637 8.880677-12.58727 22.99377-3.282924 15.882474-3.841676 35.621974-4.248971 50.03491-0.508608 18.009006-0.675414 23.899439-5.101426 28.079846-2.881768 3.2819-21.9172 27.456622-43.892732 55.359428-40.309965 51.189255-101.227235 128.546728-153.493059 193.020157-28.775727 35.494055-51.814525 63.230053-68.475772 82.434338-9.543811 10.999023-17.258887 19.500035-22.927252 25.267665-9.312533 9.472177-13.478612 12.214769-18.579015 12.226026l-0.435949 0-0.509631-0.035817c-7.566689-0.597639-71.928573-19.495942-191.280453-56.177088-73.51989-22.591591-180.211843-55.864965-187.227966-59.102861-7.965798-3.679986-22.3685-17.828896-33.372639-36.804973-9.829328-16.949834-19.938031-43.05051-12.278217-71.144683 9.027017-33.078936 27.588635-49.158918 56.741981-49.158918 2.542015 0 4.861961 0.104382 6.908672 0.192391 0.891342 0.039911 1.736634 0.075728 2.533828 0.100289 7.967844 0.259932 55.504744 14.119233 185.412534 53.028224 62.533148 18.732519 121.600192 36.425308 132.374076 38.719671 13.164442 2.820367 28.171948 5.825962 39.807497 5.825962 9.222478 0 13.259614-1.856366 15.022856-3.41596 5.718509-5.182271 85.248565-91.594392 171.10398-188.18992 147.073552-165.46427 170.676218-200.889759 173.998029-208.439051 5.27642-11.990654 6.201533-21.899803 2.747709-29.455235-4.577468-10.005345-16.067701-14.211335-19.480591-15.260274-7.650604-2.34246-134.613178-31.344349-218.081105-50.266188-1.416324-0.32031-142.243315-32.191687-175.658935-37.800698-3.490665-0.585359-6.874901-0.881109-10.049349-0.881109-18.851228 0-26.963365 10.463808-30.016034 14.402702-0.252769 0.325427-0.47586 0.611966-0.668251 0.851432-1.028472 1.291474-5.861779 6.219953-43.082234 43.928549-73.704094 74.669118-227.073328 230.045152-246.692072 255.350681-5.118823 6.607805-11.620199 13.983127-18.50124 21.792351-27.365544 31.05474-64.842861 73.579245-68.596528 126.432476-4.241808 59.782369 4.17836 139.103661 68.37139 177.495858 0.802311 0.482 1.500239 0.899529 2.080481 1.260774 3.474291 1.593364 28.641668 10.693039 203.218916 61.938579C466.414639 863.546078 558.992475 890.124661 566.193826 891.856179zM192.110394 704.763295c13.966753 5.74 330.601065 103.882842 368.677045 112.841294 6.608828-5.660178 28.488164-28.603804 100.798449-117.997981 50.969233-63.010032 109.426357-137.245247 148.109187-186.366301 30.243219-38.403454 40.001935-50.748189 43.763789-55.211041 0.366361-3.153981 0.561822-10.071863 0.722489-15.790372 0.430833-15.196826 1.019262-36.009826 4.67878-53.707732 1.263844-6.114548 2.852091-11.533214 4.762696-16.251905-26.821119 31.462035-60.488484 69.980105-100.916135 115.45699-79.291614 89.1936-165.33328 183.162176-172.30233 189.304354-6.609852 5.842335-16.087145 8.68624-28.963001 8.68624-13.69454 0-30.000684-3.246083-44.209972-6.289542-11.597685-2.472426-68.327386-19.465241-134.015538-39.139246-71.698318-21.476134-169.797156-50.857688-180.240496-52.159396-0.805381-0.027631-1.673186-0.064471-2.579879-0.104382-1.920838-0.083915-3.90717-0.171924-5.990722-0.171924-14.147887 0-28.351035 4.075001-36.418145 33.636665-5.712369 20.942966 2.281059 41.31183 9.992041 54.709597C177.329051 692.455401 188.956413 703.152534 192.110394 704.763295zM869.965586 471.070905c-0.112569 0.104382-0.229232 0.205694-0.348964 0.30803C869.68928 471.317534 869.811059 471.217245 869.965586 471.070905zM702.475073 373.071333c-3.782321 0-8.419144-0.543402-14.58486-1.713097-8.126464-1.528893-70.959456-14.960431-132.0947-28.57822-123.264168-27.458669-127.224553-30.379325-130.116555-32.511997-5.001137-3.688172-8.123394-9.264435-8.794715-15.70441-0.937393-9.019853 2.931913-17.868807 7.183954-22.637642 2.906329-3.277807 26.753577-27.909969 30.526688-31.805882 2.406932-2.732359 8.581857-7.547245 22.180202-7.547245 6.902531 0 14.994202 1.268961 24.050896 3.775158 12.231142 3.388329 57.276172 13.425398 104.965552 24.050896 125.150211 27.882338 142.960687 32.369751 147.385675 35.406046 5.244696 3.602211 8.295318 8.119301 9.066928 13.427445 1.156391 7.970914-3.352512 14.62477-6.8442 18.936166-0.635504 0.781843-1.55857 1.954609-2.709845 3.413913-14.75576 18.710005-26.225526 32.135403-34.232258 36.826463C714.725659 370.59686 710.498178 373.071333 702.475073 373.071333zM437.947965 292.967175c21.197781 7.779547 232.954551 53.76197 253.853512 57.689608 4.787256 0.909763 8.274851 1.348782 10.674619 1.348782 2.307666 0 2.651514-0.201601 5.331681-1.770405 4.125145-2.418189 13.661793-13.081551 28.341825-31.69843 1.230073-1.55857 2.217611-2.810134 2.887909-3.638028 0.554659-0.685648 0.983444-1.26282 1.311941-1.742774-14.892889-4.512997-86.202333-20.401611-139.139478-32.193734-47.959545-10.684853-93.261437-20.781276-106.006304-24.312875-7.222842-1.998613-13.424375-3.009688-18.429605-3.009688-4.356423 0-6.3929 0.785937-6.985423 1.069406-11.01335 11.370501-27.95295 28.931277-29.97817 31.214383-0.846315 0.95172-2.217611 4.099561-1.973029 6.460442C437.865073 292.651981 437.903961 292.837209 437.947965 292.967175z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)